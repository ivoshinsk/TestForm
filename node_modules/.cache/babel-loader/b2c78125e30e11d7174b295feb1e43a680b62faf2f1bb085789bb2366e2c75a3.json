{"ast":null,"code":"export default {\n  name: 'TaskPopupForm',\n  props: ['show', 'button'],\n  data() {\n    return {\n      formData: {\n        name: '',\n        phone: '',\n        email: '',\n        city: '',\n        isEmailValid: false,\n        isPhoneValid: false\n      }\n    };\n  },\n  mounted() {},\n  methods: {\n    openFormMsk() {\n      this.isFormVisible = true;\n    },\n    closePopupMsk() {\n      this.$emit('close');\n    },\n    submitForm() {\n      if (this.name && this.email && this.phone && this.isEmailValid && this.isPhoneValid) {\n        alert('Форма отправлена!');\n        this.isFormVisible = false;\n      } else {\n        alert('Пожалуйста, заполните все поля правильно.');\n      }\n    },\n    formatPhone() {\n      let formattedPhone = this.phone.replace(/\\D/g, '');\n      if (formattedPhone.length === 11) {\n        this.phone = '+7 (' + formattedPhone.substring(1, 4) + ') ' + formattedPhone.substring(4, 7) + '-' + formattedPhone.substring(7, 9) + '-' + formattedPhone.substring(9);\n        this.isPhoneValid = true;\n      } else {\n        this.isPhoneValid = false;\n      }\n    }\n  },\n  watch: {\n    email(value) {\n      this.isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","formData","phone","email","city","isEmailValid","isPhoneValid","mounted","methods","openFormMsk","isFormVisible","closePopupMsk","$emit","submitForm","alert","formatPhone","formattedPhone","replace","length","substring","watch","value","test"],"sources":["src/components/PopupForm.vue"],"sourcesContent":["<template>\n    <div v-if=\"show\" class=\"popup\">\n        <div class=\"popup-content\">\n            <h2>Форма</h2>\n            <form @submit.prevent=\"submitForm\">\n                <label for=\"name\">Имя:</label>\n                <input type=\"text\" id=\"name\" v-model=\"formData.name\" :class=\"{'error': !name}\">\n                <span v-if=\"!name\" class=\"error-message\">Обязательное поле</span>\n\n                <label for=\"phone\">Телефон:</label>\n                <input type=\"text\" id=\"phone\" v-model=\"formData.phone\" @input=\"formatPhone\" :class=\"{'error': !phone || !isPhoneValid}\">\n                <span v-if=\"!phone || !isPhoneValid\" class=\"error-message\">Обязательное поле</span>\n\n                <label for=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" v-model=\"formData.email\" :class=\"{'error': !email || !isEmailValid}\">\n                <span v-if=\"!email || !isEmailValid\" class=\"error-message\">Обязательное поле</span>\n\n                <label for=\"city\">Город:</label>\n            <select id=\"city\" v-model=\"formData.city\" required>\n                <option value=\"\">Выберите город</option>\n                <option value=\"Москва\">Москва</option>\n                <option value=\"Санкт-Петербург\">Санкт-Петербург</option>\n            </select>\n        <button type=\"submit\" @click.prevent=\"submitForm\">Отправить</button>\n        </form>\n            <button @click=\"closePopupMsk\">Закрыть</button>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TaskPopupForm',\n\n    props: ['show', 'button'],\n\n    data() {\n        return {\n            formData: {\n                name: '',\n                phone: '',\n                email: '',\n                city: '',\n                isEmailValid: false,\n                isPhoneValid: false\n            }\n        };\n    },\n\n    mounted() {\n        \n    },\n\n    methods: {\n        openFormMsk() {\n            this.isFormVisible = true;\n        },\n        closePopupMsk() {\n            this.$emit('close');\n        },\n        submitForm() {\n        if (this.name && this.email && this.phone && this.isEmailValid && this.isPhoneValid) {\n            alert('Форма отправлена!');\n            this.isFormVisible = false;\n        } else {\n            alert('Пожалуйста, заполните все поля правильно.');\n        }\n    },\n    formatPhone() {\n        let formattedPhone = this.phone.replace(/\\D/g, '');\n        if (formattedPhone.length === 11) {\n            this.phone = '+7 (' + formattedPhone.substring(1, 4) + ') ' + formattedPhone.substring(4, 7) + '-' + formattedPhone.substring(7, 9) + '-' + formattedPhone.substring(9);\n            this.isPhoneValid = true;\n        } else {\n            this.isPhoneValid = false;\n        }\n    },\n    },\n    watch: {\n        email(value) {\n            this.isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &-content {\n    background-color: #fff;\n    padding: 20px calc(var(--index) * 5);\n    border: 3px solid transparent;\n    border-image: linear-gradient(to right, rgba(209, 23, 23, 0.85), rgba(208, 230, 10, 0.8)) 1;\n    background-color: rgba(218, 209, 209, 0.873);\n  }\n\n  &-content form {\n    display: flex;\n    flex-direction: column;\n  }\n\n  &-content label {\n    margin-bottom: 10px;\n  }\n\n  &-content input, &-content select {\n    margin-bottom: 10px;\n  }\n\n  &-content button {\n    margin-bottom: 10px;\n  }\n}\n\n.error {\n    border: 1px solid red;\n\n    &-message {\n        color: red;\n    }\n}\n</style>"],"mappings":"AA+BA;EACAA,IAAA;EAEAC,KAAA;EAEAC,KAAA;IACA;MACAC,QAAA;QACAH,IAAA;QACAI,KAAA;QACAC,KAAA;QACAC,IAAA;QACAC,YAAA;QACAC,YAAA;MACA;IACA;EACA;EAEAC,QAAA,GAEA;EAEAC,OAAA;IACAC,YAAA;MACA,KAAAC,aAAA;IACA;IACAC,cAAA;MACA,KAAAC,KAAA;IACA;IACAC,WAAA;MACA,SAAAf,IAAA,SAAAK,KAAA,SAAAD,KAAA,SAAAG,YAAA,SAAAC,YAAA;QACAQ,KAAA;QACA,KAAAJ,aAAA;MACA;QACAI,KAAA;MACA;IACA;IACAC,YAAA;MACA,IAAAC,cAAA,QAAAd,KAAA,CAAAe,OAAA;MACA,IAAAD,cAAA,CAAAE,MAAA;QACA,KAAAhB,KAAA,YAAAc,cAAA,CAAAG,SAAA,gBAAAH,cAAA,CAAAG,SAAA,eAAAH,cAAA,CAAAG,SAAA,eAAAH,cAAA,CAAAG,SAAA;QACA,KAAAb,YAAA;MACA;QACA,KAAAA,YAAA;MACA;IACA;EACA;EACAc,KAAA;IACAjB,MAAAkB,KAAA;MACA,KAAAhB,YAAA,gCAAAiB,IAAA,CAAAD,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}