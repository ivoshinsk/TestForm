{"ast":null,"code":"import PopupForm from './PopupForm.vue';\nexport default {\n  name: 'TaskButtonCity',\n  components: {\n    PopupForm\n  },\n  data() {\n    return {\n      showPopup: false,\n      activeButton: ''\n    };\n  },\n  mounted() {},\n  methods: {\n    openPopup(button) {\n      this.showPopup = true;\n      this.activeButton = button;\n    },\n    closePopup() {\n      this.showPopup = false;\n      this.activeButton = '';\n    },\n    submitForm() {\n      if (this.name && this.email && this.phone && this.isEmailValid && this.isPhoneValid) {\n        alert('Форма отправлена!');\n        this.isFormVisible = false;\n      } else {\n        alert('Пожалуйста, заполните все поля правильно.');\n      }\n    },\n    formatPhone() {\n      let formattedPhone = this.phone.replace(/\\D/g, '');\n      if (formattedPhone.length === 11) {\n        this.phone = '+7 (' + formattedPhone.substring(1, 4) + ') ' + formattedPhone.substring(4, 7) + '-' + formattedPhone.substring(7, 9) + '-' + formattedPhone.substring(9);\n        this.isPhoneValid = true;\n      } else {\n        this.isPhoneValid = false;\n      }\n    }\n  },\n  watch: {\n    email(value) {\n      this.isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\n    }\n  }\n};","map":{"version":3,"names":["PopupForm","name","components","data","showPopup","activeButton","mounted","methods","openPopup","button","closePopup","submitForm","email","phone","isEmailValid","isPhoneValid","alert","isFormVisible","formatPhone","formattedPhone","replace","length","substring","watch","value","test"],"sources":["src/components/ButtonCity.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"btn\">\n            <button class=\"btn-form\" @click=\"openPopup\">Заказать в Москву</button>\n            <button class=\"btn-form\" @click=\"openPopup\">Заказать в Санкт-Петербург</button>\n        </div>\n        <PopupForm :show=\"showPopup\" @close=\"closePopup\" :button=\"activeButton\"/>\n    </div>\n</template>\n\n<script>\nimport PopupForm from './PopupForm.vue';\n\nexport default {\n    name: 'TaskButtonCity',\n    components: {\n        PopupForm,\n    },\n\n    data() {\n        return {\n            showPopup: false,\n            activeButton: ''\n        };\n    },\n\n    mounted() {\n        \n    },\n\n    methods: {\n        openPopup(button) {\n            this.showPopup = true;\n            this.activeButton = button;\n        },\n        closePopup() {\n            this.showPopup = false;\n            this.activeButton = '';\n        },\n            submitForm() {\n        if (this.name && this.email && this.phone && this.isEmailValid && this.isPhoneValid) {\n            alert('Форма отправлена!');\n            this.isFormVisible = false;\n        } else {\n            alert('Пожалуйста, заполните все поля правильно.');\n        }\n    },\n    formatPhone() {\n        let formattedPhone = this.phone.replace(/\\D/g, '');\n        if (formattedPhone.length === 11) {\n            this.phone = '+7 (' + formattedPhone.substring(1, 4) + ') ' + formattedPhone.substring(4, 7) + '-' + formattedPhone.substring(7, 9) + '-' + formattedPhone.substring(9);\n            this.isPhoneValid = true;\n        } else {\n            this.isPhoneValid = false;\n        }\n    },\n    },\n    watch: {\n        email(value) {\n            this.isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\n        }\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.btn {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n\n    .form {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    button {\n        background: rgba(209, 23, 23, 0.75);\n        font-family: inherit;\n        padding: 0.6em 1.3em;\n        margin-right: 10px;\n        font-weight: 900;\n        font-size: 18px;\n        border: 3px solid black;\n        border-radius: 0.4em;\n        box-shadow: 0.1em 0.1em;\n        cursor: pointer;\n\n        &:hover {\n            transform: translate(-0.05em, -0.05em);\n            box-shadow: 0.15em 0.15em;\n        }\n\n        &:active {\n            transform: translate(0.05em, 0.05em);\n            box-shadow: 0.05em 0.05em;\n        }\n    }\n}\n</style>\n\n\n\n"],"mappings":"AAWA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EAEAG,KAAA;IACA;MACAC,SAAA;MACAC,YAAA;IACA;EACA;EAEAC,QAAA,GAEA;EAEAC,OAAA;IACAC,UAAAC,MAAA;MACA,KAAAL,SAAA;MACA,KAAAC,YAAA,GAAAI,MAAA;IACA;IACAC,WAAA;MACA,KAAAN,SAAA;MACA,KAAAC,YAAA;IACA;IACAM,WAAA;MACA,SAAAV,IAAA,SAAAW,KAAA,SAAAC,KAAA,SAAAC,YAAA,SAAAC,YAAA;QACAC,KAAA;QACA,KAAAC,aAAA;MACA;QACAD,KAAA;MACA;IACA;IACAE,YAAA;MACA,IAAAC,cAAA,QAAAN,KAAA,CAAAO,OAAA;MACA,IAAAD,cAAA,CAAAE,MAAA;QACA,KAAAR,KAAA,YAAAM,cAAA,CAAAG,SAAA,gBAAAH,cAAA,CAAAG,SAAA,eAAAH,cAAA,CAAAG,SAAA,eAAAH,cAAA,CAAAG,SAAA;QACA,KAAAP,YAAA;MACA;QACA,KAAAA,YAAA;MACA;IACA;EACA;EACAQ,KAAA;IACAX,MAAAY,KAAA;MACA,KAAAV,YAAA,gCAAAW,IAAA,CAAAD,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}